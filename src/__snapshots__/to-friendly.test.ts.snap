// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`toFriendly with alwaysIncludeTrails=false returns the correct string when not safe 1`] = `
"Regex is not safe. There could be infinite backtracks.

The following trails show how the same input can be matched multiple ways.
3: \`a\` | 1: \`a\`
===============
3: \`a\` | 1: \`a\`
===============
       1: \`a\` |     1: \`a\`
     4→1: \`a\` |   4→1: \`a\`
   8→4→1: \`a\` | 8→4→1: \`a\`
11→8→4→1: \`a\` |    14: \`a\`
==========================

Hit maximum number of steps so there may be more results than shown here."
`;

exports[`toFriendly with alwaysIncludeTrails=false returns the correct string when not safe 2`] = `
"Regex is not safe. There could be infinite backtracks.

The following trail shows how the same input can be matched multiple ways.
3: \`a\` | 1: \`a\`
===============

Hit maximum number of steps so there may be more results than shown here."
`;

exports[`toFriendly with alwaysIncludeTrails=false returns the correct string when not safe 3`] = `
"Regex is not safe. There could be infinite backtracks.

The following trails show how the same input can be matched multiple ways.
3: \`a\` | 1: \`a\`
===============
3: \`a\` | 1: \`a\`
===============
       1: \`a\` |     1: \`a\`
     4→1: \`a\` |   4→1: \`a\`
   8→4→1: \`a\` | 8→4→1: \`a\`
11→8→4→1: \`a\` |    14: \`a\`
==========================

Timed out so there may be more results than shown here."
`;

exports[`toFriendly with alwaysIncludeTrails=false returns the correct string when not safe 4`] = `
"Regex is not safe. There could be infinite backtracks.

The following trails show how the same input can be matched multiple ways.
3: \`a\` | 1: \`a\`
===============
3: \`a\` | 1: \`a\`
===============
       1: \`a\` |     1: \`a\`
     4→1: \`a\` |   4→1: \`a\`
   8→4→1: \`a\` | 8→4→1: \`a\`
11→8→4→1: \`a\` |    14: \`a\`
==========================

Hit the max score so there may be more results than shown here."
`;

exports[`toFriendly with alwaysIncludeTrails=false returns the correct string when not safe 5`] = `
"Regex is not safe. Score: 1

The following trails show how the same input can be matched multiple ways.
3: \`a\` | 1: \`a\`
===============
3: \`a\` | 1: \`a\`
===============
       1: \`a\` |     1: \`a\`
     4→1: \`a\` |   4→1: \`a\`
   8→4→1: \`a\` | 8→4→1: \`a\`
11→8→4→1: \`a\` |    14: \`a\`
==========================

Hit the max score so there may be more results than shown here."
`;

exports[`toFriendly with alwaysIncludeTrails=false returns the correct string when not safe 6`] = `
"Regex is not safe. Score: 2

The following trails show how the same input can be matched multiple ways.
3: \`a\` | 1: \`a\`
===============
3: \`a\` | 1: \`a\`
===============
       1: \`a\` |     1: \`a\`
     4→1: \`a\` |   4→1: \`a\`
   8→4→1: \`a\` | 8→4→1: \`a\`
11→8→4→1: \`a\` |    14: \`a\`
==========================

Hit the max score so there may be more results than shown here."
`;

exports[`toFriendly with alwaysIncludeTrails=false returns the correct string when not safe 7`] = `
"Pattern was downgraded to \`pattern\`.
Regex is not safe. There could be infinite backtracks.

The following trails show how the same input can be matched multiple ways.
3: \`a\` | 1: \`a\`
===============
3: \`a\` | 1: \`a\`
===============
       1: \`a\` |     1: \`a\`
     4→1: \`a\` |   4→1: \`a\`
   8→4→1: \`a\` | 8→4→1: \`a\`
11→8→4→1: \`a\` |    14: \`a\`
==========================

Hit maximum number of steps so there may be more results than shown here."
`;

exports[`toFriendly with alwaysIncludeTrails=false returns the correct string when not safe 8`] = `
"Pattern was downgraded to \`pattern\`.
Regex is not safe. There could be infinite backtracks."
`;

exports[`toFriendly with alwaysIncludeTrails=false returns the correct string when not safe 9`] = `
"Pattern was downgraded to \`pattern\`.
Regex is not safe. There could be infinite backtracks.

The following trails show how the same input can be matched multiple ways.
3: \`a\` | 1: \`a\`
===============

Hit maximum number of steps so there may be more results than shown here.
There are more results than this but hit results limit."
`;

exports[`toFriendly with alwaysIncludeTrails=false returns the correct string when not safe but no trails 1`] = `"Regex may not be safe. Reached steps limit. The pattern may have too many variations."`;

exports[`toFriendly with alwaysIncludeTrails=false returns the correct string when not safe but no trails 2`] = `"Regex may not be safe. Timed out. The pattern may have too many variations."`;

exports[`toFriendly with alwaysIncludeTrails=false returns the correct string when not safe but no trails 3`] = `
"Regex is not safe. Score: 0

The following trails show how the same input can be matched multiple ways.
3: \`a\` | 1: \`a\`
===============
3: \`a\` | 1: \`a\`
===============
       1: \`a\` |     1: \`a\`
     4→1: \`a\` |   4→1: \`a\`
   8→4→1: \`a\` | 8→4→1: \`a\`
11→8→4→1: \`a\` |    14: \`a\`
==========================

Hit maximum number of steps so there may be more results than shown here."
`;

exports[`toFriendly with alwaysIncludeTrails=false returns the correct string when safe 1`] = `"Regex is safe. Score: 1"`;

exports[`toFriendly with alwaysIncludeTrails=false returns the correct string when safe 2`] = `"Regex is safe. Score: 2"`;

exports[`toFriendly with alwaysIncludeTrails=false returns the correct string when safe 3`] = `"Regex is safe. There could be infinite backtracks."`;

exports[`toFriendly with alwaysIncludeTrails=true returns the correct string when not safe 1`] = `
"Regex is not safe. There could be infinite backtracks.

The following trails show how the same input can be matched multiple ways.
3: \`a\` | 1: \`a\`
===============
3: \`a\` | 1: \`a\`
===============
       1: \`a\` |     1: \`a\`
     4→1: \`a\` |   4→1: \`a\`
   8→4→1: \`a\` | 8→4→1: \`a\`
11→8→4→1: \`a\` |    14: \`a\`
==========================

Hit maximum number of steps so there may be more results than shown here."
`;

exports[`toFriendly with alwaysIncludeTrails=true returns the correct string when not safe 2`] = `
"Regex is not safe. There could be infinite backtracks.

The following trail shows how the same input can be matched multiple ways.
3: \`a\` | 1: \`a\`
===============

Hit maximum number of steps so there may be more results than shown here."
`;

exports[`toFriendly with alwaysIncludeTrails=true returns the correct string when not safe 3`] = `
"Regex is not safe. There could be infinite backtracks.

The following trails show how the same input can be matched multiple ways.
3: \`a\` | 1: \`a\`
===============
3: \`a\` | 1: \`a\`
===============
       1: \`a\` |     1: \`a\`
     4→1: \`a\` |   4→1: \`a\`
   8→4→1: \`a\` | 8→4→1: \`a\`
11→8→4→1: \`a\` |    14: \`a\`
==========================

Timed out so there may be more results than shown here."
`;

exports[`toFriendly with alwaysIncludeTrails=true returns the correct string when not safe 4`] = `
"Regex is not safe. There could be infinite backtracks.

The following trails show how the same input can be matched multiple ways.
3: \`a\` | 1: \`a\`
===============
3: \`a\` | 1: \`a\`
===============
       1: \`a\` |     1: \`a\`
     4→1: \`a\` |   4→1: \`a\`
   8→4→1: \`a\` | 8→4→1: \`a\`
11→8→4→1: \`a\` |    14: \`a\`
==========================

Hit the max score so there may be more results than shown here."
`;

exports[`toFriendly with alwaysIncludeTrails=true returns the correct string when not safe 5`] = `
"Regex is not safe. Score: 1

The following trails show how the same input can be matched multiple ways.
3: \`a\` | 1: \`a\`
===============
3: \`a\` | 1: \`a\`
===============
       1: \`a\` |     1: \`a\`
     4→1: \`a\` |   4→1: \`a\`
   8→4→1: \`a\` | 8→4→1: \`a\`
11→8→4→1: \`a\` |    14: \`a\`
==========================

Hit the max score so there may be more results than shown here."
`;

exports[`toFriendly with alwaysIncludeTrails=true returns the correct string when not safe 6`] = `
"Regex is not safe. Score: 2

The following trails show how the same input can be matched multiple ways.
3: \`a\` | 1: \`a\`
===============
3: \`a\` | 1: \`a\`
===============
       1: \`a\` |     1: \`a\`
     4→1: \`a\` |   4→1: \`a\`
   8→4→1: \`a\` | 8→4→1: \`a\`
11→8→4→1: \`a\` |    14: \`a\`
==========================

Hit the max score so there may be more results than shown here."
`;

exports[`toFriendly with alwaysIncludeTrails=true returns the correct string when not safe 7`] = `
"Pattern was downgraded to \`pattern\`.
Regex is not safe. There could be infinite backtracks.

The following trails show how the same input can be matched multiple ways.
3: \`a\` | 1: \`a\`
===============
3: \`a\` | 1: \`a\`
===============
       1: \`a\` |     1: \`a\`
     4→1: \`a\` |   4→1: \`a\`
   8→4→1: \`a\` | 8→4→1: \`a\`
11→8→4→1: \`a\` |    14: \`a\`
==========================

Hit maximum number of steps so there may be more results than shown here."
`;

exports[`toFriendly with alwaysIncludeTrails=true returns the correct string when not safe 8`] = `
"Pattern was downgraded to \`pattern\`.
Regex is not safe. There could be infinite backtracks."
`;

exports[`toFriendly with alwaysIncludeTrails=true returns the correct string when not safe 9`] = `
"Pattern was downgraded to \`pattern\`.
Regex is not safe. There could be infinite backtracks.

The following trails show how the same input can be matched multiple ways.
3: \`a\` | 1: \`a\`
===============

Hit maximum number of steps so there may be more results than shown here.
There are more results than this but hit results limit."
`;

exports[`toFriendly with alwaysIncludeTrails=true returns the correct string when not safe but no trails 1`] = `"Regex may not be safe. Reached steps limit. The pattern may have too many variations."`;

exports[`toFriendly with alwaysIncludeTrails=true returns the correct string when not safe but no trails 2`] = `"Regex may not be safe. Timed out. The pattern may have too many variations."`;

exports[`toFriendly with alwaysIncludeTrails=true returns the correct string when not safe but no trails 3`] = `
"Regex is not safe. Score: 0

The following trails show how the same input can be matched multiple ways.
3: \`a\` | 1: \`a\`
===============
3: \`a\` | 1: \`a\`
===============
       1: \`a\` |     1: \`a\`
     4→1: \`a\` |   4→1: \`a\`
   8→4→1: \`a\` | 8→4→1: \`a\`
11→8→4→1: \`a\` |    14: \`a\`
==========================

Hit maximum number of steps so there may be more results than shown here."
`;

exports[`toFriendly with alwaysIncludeTrails=true returns the correct string when safe 1`] = `"Regex is safe."`;

exports[`toFriendly with alwaysIncludeTrails=true returns the correct string when safe 2`] = `
"Regex is safe. Score: 2

The following trails show how the same input can be matched multiple ways.
3: \`a\` | 1: \`a\`
===============
3: \`a\` | 1: \`a\`
===============
       1: \`a\` |     1: \`a\`
     4→1: \`a\` |   4→1: \`a\`
   8→4→1: \`a\` | 8→4→1: \`a\`
11→8→4→1: \`a\` |    14: \`a\`
==========================
"
`;

exports[`toFriendly with alwaysIncludeTrails=true returns the correct string when safe 3`] = `"Regex is safe."`;
